services:
  backend:
    build:
      context: ..
      dockerfile: env/Dockerfile
    volumes:
      - ../app:/app
      - .:/env
    environment:
      - PYTHONPATH=/app
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
    ports:
      - "8000:8000"
      - "5678:5678"  # debugpy
      - "5679:5679"  # debugpy consumer
    networks:
      - back_net
    depends_on:
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  consumer:
    build:
      context: ..
      dockerfile: env/Dockerfile
    volumes:
      - ../app:/app
      - .:/env
    environment:
      - PYTHONPATH=/app
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
    networks:
      - back_net
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: python /app/infrastructure/consumers/shared_folder_consumer.py  # путь до твоего consumer-скрипта

  mysql:
    image: mysql:8.3
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - back_net
    restart: always

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - back_net
    restart: always
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - .env
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - back_net
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

volumes:
  mysql_data:

networks:
  back_net: {}
