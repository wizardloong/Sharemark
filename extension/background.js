require('dotenv').config();

chrome.runtime.onInstalled.addListener(() => {
  chrome.contextMenus.create({
    id: "sharemark-folder",
    title: "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø–∞–ø–∫–æ–π",
    contexts: ["bookmark"]
  });
});

chrome.contextMenus.onClicked.addListener((info, tab) => {
  if (info.menuItemId === "sharemark-folder") {
    chrome.storage.local.set({ folderIdToShare: info.bookmarkId }, () => {
      chrome.action.openPopup(); // –æ—Ç–∫—Ä–æ–µ–º popup, –≥–¥–µ –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∞
    });
  }
});

function connectWebSocket(folderId) {
    ws = new WebSocket(`wss://${process.env.DOMAIN_NAME}/ws/${folderId}`);
    ws.onopen = () => {
        console.log("WebSocket connected");
    };
    ws.onmessage = (event) => {
        const data = JSON.parse(event.data);
        if (data.type === "update") {
            // –æ–±–Ω–æ–≤–ª—è–µ–º –ø–∞–ø–∫—É
            chrome.bookmarks.getTree((tree) => {
                // –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—É—é –ø–∞–ø–∫—É, —Å—Ä–∞–≤–Ω–∏—Ç—å –∏ –æ–±–Ω–æ–≤–∏—Ç—å
                // –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            });
        }
    };
    ws.onclose = () => {
        console.log("WebSocket closed, reconnecting...");
        setTimeout(() => connectWebSocket(folderId), 2000);
    };
}

function createSharedFolder(data) {
    chrome.bookmarks.create({
        parentId: "1", // –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π id
        title: `üìÅ [Shared] ${data.title}`
    }, (folder) => {
        // —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å folderId ‚Üî sharedId
        chrome.storage.local.set({ [`shared-${data.id}`]: folder.id });
    });
}
